# See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

# This stage is used when running from VS in fast mode (Default for Debug configuration)
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# This stage is used to build the service project
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
ARG PASSWORD_ENV_SEEDED=awefawef23fq2io3
WORKDIR /src
COPY ["EAMDJ/EAMDJ.csproj", "EAMDJ/"]
RUN dotnet restore "./EAMDJ/EAMDJ.csproj"
RUN mkdir /https && dotnet dev-certs https -ep /https/aspnetapp.pfx -p ${PASSWORD_ENV_SEEDED}
COPY . .
WORKDIR "/src/EAMDJ"
RUN dotnet build "./EAMDJ.csproj" -c $BUILD_CONFIGURATION -o /app/build

# This stage is used to build the React app
FROM node:18 AS react-build
WORKDIR /src/frontend
COPY ["EAMDJ/frontend/package.json", "EAMDJ/frontend/package-lock.json", "./"]
RUN npm install
COPY EAMDJ/frontend/ .
ENV NODE_OPTIONS=--openssl-legacy-provider
RUN npm run build

# This stage is used to publish the service project to be copied to the final stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./EAMDJ.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# This stage is used in production or when running from VS in regular mode (Default when not using the Debug configuration)
FROM base AS final
WORKDIR /app
COPY --chmod=0755 --from=build /https/* /https/
COPY --from=publish /app/publish .
COPY --from=react-build /src/frontend/build /app/wwwroot
ENTRYPOINT ["dotnet", "EAMDJ.dll"]